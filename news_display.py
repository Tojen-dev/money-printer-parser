import logging
from datetime import datetime
from rich.console import Console
from rich.panel import Panel
from rich.text import Text
from rich.table import Table
from rich.live import Live
from rich.layout import Layout
import config

logger = logging.getLogger(__name__)

class NewsDisplay:
    def __init__(self):
        self.console = Console()
        self.news_count = 0
        self.source_stats = {
            'telegram': 0,
            'rss': 0,
            'websocket': 0
        }
        
    def display_news(self, news_data):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        try:
            self.news_count += 1
            self.source_stats[news_data['source']] += 1
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
            icon = config.SOURCE_ICONS.get(news_data['source'], 'üì∞')
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
            timestamp = news_data['timestamp']
            time_str = timestamp.strftime('%H:%M:%S.%f')[:-3]  # –ú–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
            header = f"{icon} {news_data['source'].upper()} | {time_str}"
            
            # –û–±—Ä–µ–∑–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            content = news_data['content']
            if len(content) > 200:
                content = content[:200] + "..."
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å —Å –Ω–æ–≤–æ—Å—Ç—å—é
            panel = Panel(
                Text(content, style="white"),
                title=Text(header, style="bold cyan"),
                border_style="blue",
                padding=(0, 1)
            )
            
            # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = self._get_stats()
            
            # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Å–æ–ª—å –∏ –≤—ã–≤–æ–¥–∏–º –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            self.console.clear()
            self.console.print(stats)
            self.console.print(panel)
            
            # –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            logger.info(f"–ù–æ–≤–æ—Å—Ç—å #{self.news_count} –æ—Ç {news_data['source']}: {content[:50]}...")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏: {e}")
    
    def _get_stats(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        table = Table(title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π")
        table.add_column("–ò—Å—Ç–æ—á–Ω–∏–∫", style="cyan", no_wrap=True)
        table.add_column("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", style="magenta", justify="right")
        table.add_column("–ò–∫–æ–Ω–∫–∞", style="green", justify="center")
        
        for source, count in self.source_stats.items():
            icon = config.SOURCE_ICONS.get(source, 'üì∞')
            table.add_row(source.upper(), str(count), icon)
        
        table.add_row("–í–°–ï–ì–û", str(self.news_count), "üìà")
        
        return table
    
    def display_startup_info(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ"""
        self.console.print(Panel(
            "[bold green]üöÄ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π BWEnews –∑–∞–ø—É—â–µ–Ω–∞![/bold green]\n\n"
            "[yellow]–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:[/yellow]\n"
            f"üì± Telegram: {config.TELEGRAM_CHANNEL_USERNAME}\n"
            f"üì° RSS: {config.RSS_URL}\n"
            f"üîå WebSocket: {config.WEBSOCKET_URL}\n\n"
            "[red]–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏[/red]",
            title="[bold blue]BWEnews Speed Test[/bold blue]",
            border_style="green"
        ))
    
    def display_error(self, error_msg):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏"""
        self.console.print(Panel(
            f"[bold red]‚ùå –û—à–∏–±–∫–∞: {error_msg}[/bold red]",
            border_style="red"
        ))
    
    def display_shutdown(self):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏"""
        self.console.print(Panel(
            f"[bold yellow]üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\n"
            f"–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {self.news_count}[/bold yellow]",
            border_style="yellow"
        ))
